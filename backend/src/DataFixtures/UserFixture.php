<?php

declare(strict_types=1);

namespace App\DataFixtures;

use App\Document\User;
use \DateTime as DateTime;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
use App\Security\Constant\Roles;
use Doctrine\Bundle\MongoDBBundle\Fixture\Fixture;
use Faker\Generator;
use Faker\Factory as FakerFactory;
use Doctrine\Persistence\ObjectManager;
use Doctrine\Bundle\MongoDBBundle\Fixture\ODMFixtureInterface;
use App\Service\Constant\Users;

final class UserFixture extends Fixture implements ODMFixtureInterface
{

    private Generator $faker;

    private string $password;

    private string $salt;

    public function __construct(
        private UserPasswordHasherInterface $userPasswordHasher,
    ) {
        //encode the password once and reuse the same hash
        //for each user generated by the fixture
        //to speed up the fixture process
        $this->salt = bin2hex(random_bytes(32));
        $user = new User();
        $user->setSalt($this->salt);
        $this->password = $this->userPasswordHasher->hashPassword($user, 'password');

        $this->faker = FakerFactory::create();
        $this->faker->seed(1234);
    }

    /**
     * @inheritDoc
     */
    public function load(ObjectManager $manager)
    {
        $admin = new User();
        $admin
            ->setUsername("admin@admin.com")
            ->setSalt($this->salt)
            ->setPassword($this->password)
            ->addRole(Roles::ROLE_USER)
            ->addRole(Roles::ROLE_ADMIN);
        $manager->persist($admin);

        $user = new User();
        $user
            ->setUsername("user@user.com")
            ->setSalt($this->salt)
            ->setPassword($this->password)
            ->addRole(Roles::ROLE_USER);
        $manager->persist($user);

        $manager->flush();
    }
}
